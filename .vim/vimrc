" Most of this is taken from here
" http://stackoverflow.com/questions/164847/what-is-in-your-vimrc
" http://jcoffeehome.google.com/svn-history/r56/trunk/tools/linux/userHome/.vimrc
set nocompatible

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'tpope/vim-rails'
Plugin 'dsawardekar/ember.vim'
Plugin 'wincent/Command-T'
Plugin 'mileszs/ack.vim'
Plugin 'scrooloose/nerdtree'
call vundle#end()
syntax on
filetype plugin indent on

" NOTE: MAKE SURE ~/.vim/backup and ~/.vim/swaps exist!
" Keep vim backup files in one directory
set backup
if (has("win64") || has("win32") || has("win16"))
	\ && isdirectory(expand("%USERPROFILE%/.vim/backups"))
	\ && isdirectory(expand("%USERPROFILE%/.vim/swaps"))
		set backupdir=%USERPROFILE%/.vim/backups
		set directory=%USERPROFILE%/.vim/swaps
		set viminfo+=n%USERPROFILE%/.vim/viminfo
elseif isdirectory(expand("~/.vim/backups"))
	\ && isdirectory(expand("~/.vim/swaps"))
		set backupdir=~/.vim/backups
		set directory=~/.vim/swaps
		set viminfo+=n~/.vim/viminfo
else
	echo "Warning: couldn't find ~/.vim/backup or ~/.vim/tmp. Using normal backup behavior."
endif

" Set path to where vim was launched. Better use of find.
set path=$PWD/**
" No error sounds
set noerrorbells
set visualbell
set t_vb=
" Keep 2 lines above and below
set scrolloff=2
" More history! Default is 20 I think
set history=1000
" Indent according to above line
set autoindent
" Spaces over tabs
set tabstop=2
set shiftwidth=2
set softtabstop=2
set smarttab
set expandtab
" Tab to expand vim commands
set wildmenu
set wildmode=list:longest,full
" Fixes backspace problems (not deleting over line breaks) (I think)
set backspace=2
" Display line numbers
set number
set relativenumber
" Ignore case in search
set ignorecase
" Don't ignore when I include capital characters (and other stuff?)
set smartcase
" Start search immediately!
set incsearch
" Highlight search
set hlsearch
" Automatic commands
if has("autocmd")
	" Treat .json files as .js
	autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
endif
" Vroooom. Check what this does later
set ttyfast
" Enable mouse in all modes
set mouse=a
" Remove trailing whitespace before a save
autocmd FileType c,scss,cpp,python,ruby,java,javascript,html,css,haml,coffee,bash,yaml autocmd BufWritePre <buffer> :%s/\s\+$//e
autocmd BufWritePre *.hjs :%s/\s\+$//e
" Folding
set foldmethod=indent
set foldlevel=1
set nofoldenable
" I don't like the last valid line to be highlighted.
set colorcolumn=81
" NERDTree on startup
autocmd vimenter * NERDTree
" System copy paste
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P
" Don't replace buffer after visual paste
function! RestoreRegister()
  let @" = s:restore_reg
  return ''
endfunction
function! s:Repl()
  let s:restore_reg = @"
  return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()
" Misc
let mapleader = "\<Space>"
colorscheme slate
syntax enable
