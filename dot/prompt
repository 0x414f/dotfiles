#!/usr/bin/env zsh

function git_prompt() {
  local gitStatus='';
  local branchName='';

  # Check if the current directory is in a Git repository.
  git rev-parse --is-inside-work-tree &>/dev/null || return;

  # Check for what branch weâ€™re on.
  # Get the short symbolic ref. If HEAD isnâ€™t a symbolic ref, get a
  # tracking remote branch or tag. Otherwise, get the
  # short SHA for the latest commit, or give up.
  branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
    git describe --all --exact-match HEAD 2> /dev/null || \
    git rev-parse --short HEAD 2> /dev/null || \
    echo '(unknown)')";

  # Check for uncommitted changes in the index.
  if ! $(git diff --quiet --ignore-submodules --cached); then
    gitStatus+='+';
  fi;
  # Check for unstaged changes.
  if ! $(git diff-files --quiet --ignore-submodules --); then
    gitStatus+='!';
  fi;
  # Check for untracked files.
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    gitStatus+='?';
  fi;
  # Check for stashed files.
  if $(git rev-parse --verify refs/stash &>/dev/null); then
    gitStatus+='$';
  fi;

  [ -n "${gitStatus}" ] && gitStatus="[${gitStatus}]";

  echo -n "${prompt_white}on ${prompt_purple}${branchName} ${prompt_blue}${gitStatus}";
}

prompt_red='%F{167}';
prompt_green='%F{142}';
prompt_yellow='%F{214}';
prompt_blue='%F{109}';
prompt_purple='%F{175}';
prompt_orange='%F{208}';
prompt_white='%F{15}';

PROMPT=$'\n'
PROMPT+='${prompt_green}%~ $(git_prompt)'$'\n'
PROMPT+='${prompt_white}> %F{reset}'
